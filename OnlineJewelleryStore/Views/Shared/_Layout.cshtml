<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @*@Styles.Render("~/Content/css")*@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/MainLayout.css" rel="stylesheet" />
    <link href="~/Content/animate.css" rel="stylesheet" />

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/modernizr")

    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" type="text/css" />
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>

    <script src="~/Scripts/wow.min.js"></script>
    <script>
        new WOW().init();
    </script>
    <script>
        function imageZoom(imgID, resultID) {
            var img, lens, result, cx, cy;
            img = document.getElementById(imgID);
            result = document.getElementById(resultID);
            /* Create lens: */
            lens = document.createElement("DIV");
            lens.setAttribute("class", "img-zoom-lens");
            /* Insert lens: */
            img.parentElement.insertBefore(lens, img);
            /* Calculate the ratio between result DIV and lens: */
            cx = result.offsetWidth / lens.offsetWidth;
            cy = result.offsetHeight / lens.offsetHeight;
            /* Set background properties for the result DIV */
            result.style.backgroundImage = "url('" + img.src + "')";
            result.style.backgroundSize = (img.width * cx) + "px " + (img.height * cy) + "px";
            /* Execute a function when someone moves the cursor over the image, or the lens: */
            lens.addEventListener("mousemove", moveLens);
            img.addEventListener("mousemove", moveLens);
            /* And also for touch screens: */
            lens.addEventListener("touchmove", moveLens);
            img.addEventListener("touchmove", moveLens);
            function moveLens(e) {
                var pos, x, y;
                /* Prevent any other actions that may occur when moving over the image */
                e.preventDefault();
                /* Get the cursor's x and y positions: */
                pos = getCursorPos(e);
                /* Calculate the position of the lens: */
                x = pos.x - (lens.offsetWidth / 2);
                y = pos.y - (lens.offsetHeight / 2);
                /* Prevent the lens from being positioned outside the image: */
                if (x > img.width - lens.offsetWidth) { x = img.width - lens.offsetWidth; }
                if (x < 0) { x = 0; }
                if (y > img.height - lens.offsetHeight) { y = img.height - lens.offsetHeight; }
                if (y < 0) { y = 0; }
                /* Set the position of the lens: */
                lens.style.left = x + "px";
                lens.style.top = y + "px";
                /* Display what the lens "sees": */
                result.style.backgroundPosition = "-" + (x * cx) + "px -" + (y * cy) + "px";
            }
            function getCursorPos(e) {
                var a, x = 0, y = 0;
                e = e || window.event;
                /* Get the x and y positions of the image: */
                a = img.getBoundingClientRect();
                /* Calculate the cursor's x and y coordinates, relative to the image: */
                x = e.pageX - a.left;
                y = e.pageY - a.top;
                /* Consider any page scrolling: */
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return { x: x, y: y };
            }
        }
    </script>
</head>
<body>
    <nav class="navbar navbar-inverse my-navbar navbar-fixed-top" style="background-color:white; border-color:white">
        <div class="container">
            <div class="navbar-header" style="padding-right:20px;">
                <a href=@Url.Action("Index", "Home", new {})>
                    <img src=@Url.Content("~/Content/Images/logo.png")
                         class="img-responsive navbar-brand"
                         title="click to view product detail"
                         style="cursor:pointer;padding:3px;" />
                </a>
                <button type="button" class="navbar-toggle nav navbar-nav navbar-right" style="background-color:#3b5998;padding-right:10px;" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
                    @if (Session["username"] == null)
                    {
                        if (ViewBag.Title != "SignUp")
                        {
                            <li style="padding-top:10px; padding-left:2px">
                                <div>
                                    @Html.ActionLink(
                                        "Sign Up",
                                        "SignUp",
                                        "Account",
                                        new { },
                                        new { @class = "btn btn-primary btn-sm signUpButton" }
                                    )
                                </div>
                            </li>
                        }
                        if (ViewBag.Title != "Login")
                        {
                            <li style="padding-top:10px; padding-left:2px">
                                <div>
                                    @Html.ActionLink(
                                         "Login",
                                         "Login",
                                         "Account",
                                         new { },
                                         new { @class="btn btn-primary btn-sm loginButton" }
                                     )
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        List<SelectListItem> dropDownItems = new List<SelectListItem> {
                                                                new SelectListItem {
                                                                    Text = "Welcome " + Session["username"].ToString().ToUpper(),
                                                                    Value = Url.Action("Index", "Home"),
                                                                    Selected = ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("Home")
                                                                }
                                                            };
                        if ((int)Session["roleId"] == 1)
                        {
                            dropDownItems.Add(new SelectListItem
                            {
                                Text = "Product Dashboard",
                                Value = Url.Action("ProductIndex", "ProductDashboard", new { selectedId = 1 }),
                                Selected = ViewContext.RouteData.Values["action"].ToString().Equals("ProductIndex") && ViewContext.RouteData.Values["controller"].ToString().Equals("ProductDashboard")
                            });
                            dropDownItems.Add(new SelectListItem
                            {
                                Text = "Member Dashboard",
                                Value = Url.Action("Index", "MemberDashboard"),
                                Selected = ViewContext.RouteData.Values["action"].ToString().Equals("Index") && ViewContext.RouteData.Values["controller"].ToString().Equals("MemberDashboard")
                            });
                        }
                        dropDownItems.Add(new SelectListItem
                        {
                            Text = "My Orders",
                            Value = Url.Action("MyOrders", "Account"),
                            Selected = ViewContext.RouteData.Values["action"].ToString().Equals("MyOrders") && ViewContext.RouteData.Values["controller"].ToString().Equals("Account")
                        });
                        dropDownItems.Add(new SelectListItem
                        {
                            Text = "Logout",
                            Value = Url.Action("Logout", "Account"),
                            Selected = ViewContext.RouteData.Values["action"].ToString().Equals("Logout") && ViewContext.RouteData.Values["controller"].ToString().Equals("Account")
                        });
                        <li style="padding-top:10px">
                            @Html.DropDownList(
                                "AccountDetails",
                                dropDownItems,
                                new {
                                    @class = "btn btn-primary btn-sm",
                                    @style ="display:inline-block",
                                    @id = "urlddl"
                                }
                            )
                        </li>
                    }
                    @if (ViewBag.Title != "Checkout" && ViewBag.Title != "Buy")
                    {
                        <li style="padding-top:10px; padding-left:2px" id="layout-cart-li">
                            @Html.Action(
                                "_Cartpartial",
                                "Home"
                            )
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    @RenderBody()
    @*<div class="navbar navbar-inner" style="margin-bottom:0px;">
        <footer style="text-align:center;padding-bottom:10px" class="bg-primary">
            <hr />
            <p>&copy; @DateTime.Now.Year - Swathi E-Commerce Website</p>
        </footer>
    </div>*@
    <footer id="footer" class="bg-primary">
        <p>&copy; @DateTime.Now.Year - Swathi E-Commerce Website</p>
    </footer>

    @RenderSection("scripts", required: false)
</body>
</html>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script>
    $(function () {
        $('#urlddl').change(function () {
            //var urlddl_text = $("#urlddl option:selected").text();
            //$("#hidden1").val(urlddl_text);
            var url = $(this).val();
            if (url != null && url != '') {
                window.location.href = url;
            }
        });
    });
</script>
