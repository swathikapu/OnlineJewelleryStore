@model OnlineJewelleryStore.Models.Cart

@{
    ViewBag.Title = "Checkout";
}

<div class="form-control-static" style="padding:30px;">
    <div class="row">
        <div class="col-md-12">
            <div class="page-header bg-primary text-center text-capitalize">
                <h2 class=" category-heading">Checkout</h2>
            </div>
        </div>
    </div>
    @if (Model.Items.Count() > 0)
    {
        <table class="table table-responsive table-hover table-bordered">
            <thead class="alert-info" style="background-color:#A7BACE;">
                <tr class="">
                    <th>
                        @Html.DisplayNameFor(model => model.Items[0].Product.Image)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items[0].Product.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items[0].Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items[0].Product.Price)
                    </th>
                    @*<th></th>*@
                </tr>
            </thead>

            @foreach (var item in Model.Items)
            {
            <tr id="@item.Product.Id" style="font-weight: bold">
                <td>
                    <img class="img-responsive" title="click to view product detail"
                         style="cursor:pointer;height:80px;width:100px;"
                         src=@Url.Content(item.Product.Image) />
                </td>
                <td class="text-primary" style="padding-top:40px">
                    @Html.DisplayFor(modelItem => item.Product.Name)
                    @*@Ajax.ActionLink(
                        linkText: "Remove",
                        actionName: "RemovefromCart",
                        controllerName: "Cart",
                        routeValues: new { productId = Model.Product.Id},
                        ajaxOptions: new AjaxOptions {
                            UpdateTargetId= Model.Product.Id.ToString(),
                            InsertionMode=InsertionMode.Replace
                        },
                        htmlAttributes: new {@class="btn btn-primary btn-sm cartButton"}
                    )*@
                    @Html.ActionLink(
                        "Remove",
                        "RemovefromCart",
                        "Cart",
                        new { productId = item.Product.Id },
                        new { @class = "btn btn-primary btn-sm cartButton" }
                    )
                    <a href="#" class="incrproduct" data-id="@item.Product.Id">+</a>
                    <a href="#" class="decrproduct" data-id="@item.Product.Id">-</a>
                </td>
                <td class="qty@(item.Product.Id)" style="padding-top:40px">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td class="text-danger total@(item.Product.Id)" style="padding-top:40px">
                    @Html.DisplayFor(modelItem => item.TotalPrice)
                </td>
            </tr>
            }
        </table>
    }
    else
    {
        <h2 style="margin-top:100px">Cart is Empty</h2>
    }
    @Html.ActionLink(
        "Continue Shopping",
        "Index",
        "Home",
        new {},
        new {
            @class = "btn btn-primary btn-sm continueButton",
            @style = "float:left;"
        }
    )
    @Html.ActionLink(
        "Buy " + @Model.NumberOfItems + " item(s) - £" + @Model.TotalPrice,
        "Buy",
        "Order",
        new {},
        new {
            @class = "btn btn-primary btn-sm buyButton",
            @style = "float:right;"
        }
    )
</div>

<script>
    $(
        function () {
            $('a.incrproduct').click(
                function (e) {
                    e.preventDefault();
                    var productId = $(this).data("id");
                    var url = "/Home/IncrementProduct";
                    $.getJSON(url, { productId: productId }, function (data) {
                        $("td.qty" + productId).html(data.qty);
                        var priceHtml = "£" + data.price.toFixed(2);
                        $("td.total" + productId).html(priceHtml);
                    }).done();
            });
        }
    );
    $(
        function () {
            $('a.decrproduct').click(
                function (e) {
                    e.preventDefault();
                    var productId = $(this).data("id");
                    var url = "/Home/DecrementProduct";
                    $.getJSON(url, { productId: productId }, function (data) {
                        if (data.qty == 0) {
                            location.reload();
                        }
                        $("td.qty" + productId).html(data.qty);
                        var priceHtml = "£" + data.price.toFixed(2);
                        $("td.total" + productId).html(priceHtml);
                    }).done();
                });
        }
    );
</script>